{"version":3,"sources":["components/Button.jsx","components/Header.jsx","components/Task.jsx","components/Tasks.jsx","components/AddTask.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","onClick","style","backgroundColor","className","defaultProps","Header","title","onClickAddTask","btnText","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","dateTime","Tasks","tasks","map","AddTask","onAddTask","useState","setText","setDateTime","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTaskForm","setShowTaskForm","setTasks","length","newTask","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e687f94.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({ text, color, onClick }) => {\r\n\r\n    return (\r\n        <button\r\n            style={{ backgroundColor: color }}\r\n            className=\"btn\"\r\n            onClick={onClick}\r\n        >\r\n            {text}\r\n        </button>\r\n    )\r\n\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n//   onClick: PropTypes.func\r\n}\r\n\r\nexport default Button","import Button from './Button'\r\n\r\n// 'btnText' is boolean to change 'Add Task' Button text\r\nconst Header = ({title, onClickAddTask,btnText}) => {\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h2 className=\"\">{title}</h2>\r\n            <Button color={btnText?'red':'green'} text={btnText?'Close':'Add Task'} onClick={onClickAddTask}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({ task,onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder?'reminder':''}`} onDoubleClick={()=>onToggle(task.id)}>\r\n            <h3>{task.text}\r\n                <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(task.id)} />\r\n            </h3>\r\n            <p>{task.dateTime}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\nconst AddTask = ({onAddTask}) => {\r\n\r\n    const [text,setText] = useState('')\r\n    const [dateTime,setDateTime] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n    \r\n// Form Validation\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!text) {\r\n            alert('Kindly add text')\r\n            return\r\n        }\r\n\r\n        onAddTask({ text, dateTime, reminder })\r\n        \r\n        // Clear Form After Submit\r\n        setText('')\r\n        setDateTime('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-task-form\" onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder=\"Enter Your Task...\" value={text} onChange={(e)=>setText(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Date & Time</label>\r\n                <input type=\"text\" placeholder=\"Add Date & Time\" value={dateTime} onChange={(e)=>setDateTime(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control form-control-checkbox\">\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\" checked={reminder} placeholder=\"Enter Task Title Here...\" value={reminder} onChange={(e)=>setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <input type=\"submit\" value='Save Task' className=\"btn btn-block\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import {useState} from 'react'\nimport Header from './components/Header';\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\nconst App = () => {\n  const [showAddTaskForm, setShowTaskForm] = useState(false);\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'OS Mid Exam',\n      dateTime: 'Dec 20 at 8:00am',\n      reminder: true\n    },\n    {\n      id: 2,\n      text: 'SE Use Case ASG',\n      dateTime: 'Dec 23 at 11:00am',\n      reminder: true\n    },\n    {\n      id: 3,\n      text: 'Analysis of Algorithms ASG',\n      dateTime: 'Dec 23 at 2:00pm',\n      reminder: false\n    },\n  ])\n\n  // Add Task\n  const addTask = (task) => {\n    const id = tasks[tasks.length - 1].id + 1;\n    const newTask = {id,...task}\n    setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task)=>task.id!==id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id\n    ?{...task,reminder: !task.reminder}:task))\n  }\n\n  return (\n    <div className=\"container\">\n      <Header title='Task Scheduler' onClickAddTask={()=>setShowTaskForm(!showAddTaskForm)} btnText={showAddTaskForm}/>\n      {/* Ternary Operator without else used below => \"&&\"  */}\n      {showAddTaskForm && (<AddTask onAddTask={addTask} />)}\n      {tasks.length>0?(<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>):'No task to do'}      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <><App /></>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}